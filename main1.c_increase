#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct {
    int *data;
    int cap;
    int inicio;
    int fim;
    int tam;
} FCirc;

void init_Fila(FCirc *f, int cap) {
    f->data = (int *)malloc((cap + 1) * sizeof(int)); // 1 extra
    f->cap = cap + 1;
    f->inicio = 0;
    f->fim = 0;
    f->tam = 0;
}

int isFull(FCirc *fila) {
    return ((fila->fim + 1) % fila->cap) == fila->inicio;
}

int isEmpty(FCirc *fila) {
    return fila->inicio == fila->fim;
}

void add(FCirc *fila, int valor) {
    if (isFull(fila)) {
        fila->inicio = (fila->inicio + 1) % fila->cap; // substitui o mais antigo
    } else {
        fila->tam++;
    }

    fila->data[fila->fim] = valor;
    fila->fim = (fila->fim + 1) % fila->cap;
}

void remover(FCirc *fila) {
    if (isEmpty(fila)) {
        printf("fila vazia\n");
        return;
    }
    printf("%d\n", fila->data[fila->inicio]);
    fila->inicio = (fila->inicio + 1) % fila->cap;
    fila->tam--;
}

void listar(FCirc *fila) {
    if (isEmpty(fila)) {
        printf("fila vazia\n");
        return;
    }

    int i = fila->inicio;
    for (int c = 0; c < fila->tam; c++) {
        printf("%d", fila->data[i]);
        if (c < fila->tam - 1)
            printf(" ");
        i = (i + 1) % fila->cap;
    }
    printf("\n");
}

void print(FCirc *fila) {
    for (int i = 0; i < fila->cap; i++) {
        int ocupado = 0;
        for (int j = 0; j < fila->tam; j++) {
            int pos = (fila->inicio + j) % fila->cap;
            if (pos == i) {
                printf("%d", fila->data[pos]);
                ocupado = 1;
                break;
            }
        }
        if (!ocupado)
            printf("-");
        if (i < fila->cap - 1)
            printf(" ");
    }
    printf("\n");
}

void end(FCirc *fila) {
    free(fila->data);
    fila->data = NULL;
}

int main() {
    FCirc fila;
    int k;
    char comando[20];

    scanf("%d", &k);
    init_Fila(&fila, k);

    while (1) {
        if (scanf("%s", comando) != 1) break;

        if (strcmp(comando, "ADD") == 0) {
            int n;
            scanf("%d", &n);
            add(&fila, n);
        } 
        else if (strcmp(comando, "REMOVE") == 0) {
            remover(&fila);
        } 
        else if (strcmp(comando, "LIST") == 0) {
            listar(&fila);
        } 
        else if (strcmp(comando, "PRINT") == 0) {
            print(&fila);
        } 
        else if (strcmp(comando, "END") == 0) {
            end(&fila);
            break; 
        }
    }
    
    return 0; 
}
