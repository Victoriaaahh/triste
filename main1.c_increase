#include <stdio.h>
#include <stdlib.h>
#include <string.h>

typedef struct {
    int *data;
    int K;      
    int inicio; 
    int fim;    
    int tam;    
} FCirc;

void init_Fila(FCirc *fila, int K) {
    fila->data = (int *)malloc(K * sizeof(int));
    fila->K = K;
    fila->inicio = 0;
    fila->fim = 0;
    fila->tam = 0;
    for (int i = 0; i < K; i++)
        fila->data[i] = -1; 
    }

int isFull(FCirc *fila) {
    return fila->tam == fila->K;
}

int isEmpty(FCirc *fila) {
    return fila->tam == 0;
}

void add(FCirc *fila, int valor) {
    fila->data[fila->fim] = valor;
    if (isFull(fila)) {
        fila->inicio = (fila->inicio + 1) % fila->K;
    } else {
        fila->tam++;
    }
    fila->fim = (fila->fim + 1) % fila->K;
}

void remover(FCirc *fila) {
    if (isEmpty(fila)) {
        printf("fila vazia\n");
        return;
    }
    printf("%d\n", fila->data[fila->inicio]);
    fila->data[fila->inicio] = -1;
    fila->inicio = (fila->inicio + 1) % fila->K;
    fila->tam--;
}

void list(FCirc *fila) {
    if (isEmpty(fila)) {
        printf("EMPTY\n");
        return;
    }
    int idx = fila->inicio;
    for (int i = 0; i < fila->tam; i++) {
        printf("%d", fila->data[idx]);
        if (i < fila->tam - 1) printf(" ");
        idx = (idx + 1) % fila->K;
    }
    printf("\n");
}

void print(FCirc *fila) {
    for (int i = 0; i < fila->K; i++) {
        int idx = fila->inicio;
        int encontrado = 0;

        for (int j = 0; j < fila->tam; j++) {
            if (idx == i) {
                encontrado = 1;
                break;
            }
            idx = (idx + 1) % fila->K;
        }

        if (encontrado)
            printf("%d", fila->data[i]);
        else
            printf("-");

        if (i < fila->K - 1)
            printf(" ");
    }
    printf("\n");
}


void increase(FCirc *fila, int inc) {
    int novo_K = fila->K + inc;
    int *novo_data = (int *)malloc(novo_K * sizeof(int));

    for (int i = 0; i < novo_K; i++)
        novo_data[i] = -1;

    int idx_antigo = fila->inicio;
    for (int i = 0; i < fila->tam; i++) {
        novo_data[i] = fila->data[idx_antigo];
        idx_antigo = (idx_antigo + 1) % fila->K;
    }

    free(fila->data);
    fila->data = novo_data;
    fila->K = novo_K;
    fila->inicio = 0;
    fila->fim = fila->tam;
}

void end(FCirc *fila) {
    free(fila->data);
    fila->data = NULL;
}

int main() {
    FCirc fila;
    int k;
    char comando[20];

    scanf("%d", &k);
    init_Fila(&fila, k);

    while (1) {
        if (scanf("%s", comando) != 1) break;

        if (strcmp(comando, "ADD") == 0) {
            int n;
            scanf("%d", &n);
            add(&fila, n);
        } 
        else if (strcmp(comando, "REMOVE") == 0) {
            remover(&fila);
        } 
        else if (strcmp(comando, "LIST") == 0) {
            list(&fila);
        } 
        else if (strcmp(comando, "PRINT") == 0) {
            print(&fila);
        } 
        else if (strcmp(comando, "INCREASE") == 0) {
            int inc;
            scanf("%d", &inc);
            increase(&fila, inc);
        }
        else if (strcmp(comando, "END") == 0) {
            end(&fila);
            break; 
        }
    }

    return 0;
}
